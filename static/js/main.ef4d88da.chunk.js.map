{"version":3,"sources":["components/Navbar.js","components/TextFrom.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","prop","className","mode","href","tittle","type","id","onClick","toggleGreenMode","name","value","toggleBlueMode","toggleDarkMode","toggleLightMode","htmlFor","TextFrom","handOneChange","event","setText","target","useState","text","onChange","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","getSelection","removeAllRanges","navigator","clipboard","writeText","split","join","Alert","style","height","alert","role","msg","prototype","PropTypes","string","App","setmode","setAlert","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ef4d88da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(prop) {\r\n  return (\r\n    <>\r\n      \r\n        <nav\r\n          className={`navbar navbar-expand-lg navbar-${prop.mode} bg-${prop.mode}`}\r\n        >\r\n          <div className=\"container-fluid\">\r\n            <a className={`navbar-brand text-${\r\n                    prop.mode === \"light\" ? \"dark\" : \"light\"\r\n                  } `} href=\"/\">\r\n              {prop.tittle}\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li  className=\"nav-item\">\r\n                  <a className={`nav-link active navbar-brand text-${\r\n                    prop.mode === \"light\" ? \"dark\" : \"light\"\r\n                  } `} aria-current=\"page\" href=\"/\">\r\n                    Home\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className={`nav-link navbar-brand text-${\r\n                    prop.mode === \"light\" ? \"dark\" : \"light\"\r\n                  } `} href=\"/\">\r\n                    About\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n\r\n              {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n            </form> */}\r\n\r\n              {/* <div className=\"form-check form-switch\">\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    prop.mode === \"light\" ? \"dark\" : \"light\"\r\n                  } `}\r\n                  htmlhtmlFor=\"flexSwitchCheckDefault\"\r\n                >\r\n                  Enable Dark Mode\r\n                </label>\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  role=\"switch\"\r\n                  type=\"checkbox\"\r\n                  onClick={prop.toggleMode}\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n              </div> */}\r\n\r\n              {/* <div className=\"form-check\">\r\n                <input onChange={handOneChange} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" />\r\n               \r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input onChange={handOneChange} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\"  />\r\n               \r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input onChange={handOneChange} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" />\r\n               \r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input onChange={handOneChange} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" checked/>\r\n              </div> */}\r\n\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"mx-2 \"\r\n                  onClick={prop.toggleGreenMode}\r\n                  type=\"radio\"\r\n                  name=\"mode\"\r\n                  value=\"male\"\r\n                  id=\"\"\r\n                />\r\n                <input\r\n                  className=\"mx-2 \"\r\n                  onClick={prop.toggleBlueMode}\r\n                  type=\"radio\"\r\n                  name=\"mode\"\r\n                  value=\"other\"\r\n                  id=\"\"\r\n                />\r\n                <input\r\n                  className=\"mx-2 \"\r\n                  onClick={prop.toggleDarkMode}\r\n                  type=\"radio\"\r\n                  name=\"mode\"\r\n                  value=\"female\"\r\n                  id=\"\"\r\n                />\r\n                <input\r\n                  className=\"mx-2 \"\r\n                  onClick={prop.toggleLightMode}\r\n                  type=\"radio\"\r\n                  name=\"mode\"\r\n                  value=\"female\"\r\n                  id=\"\"\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    prop.mode === \"light\" ? \"dark\" : \"light\"\r\n                  } `}\r\n                  htmlFor=\"flexRadioDefault2\"\r\n                >\r\n                  Enable Mode\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  tittle: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextFrom(prop) {\r\n\r\n\r\n\r\n  const updateUppercase = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    prop.showAlert(\"Success\", \"Updated to Uppercase\")\r\n  };\r\n  const updateLowercase = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    prop.showAlert(\"Success\", \"Updated to Lowercase\")\r\n  };\r\n  const handCopyText = () => {\r\n    let text= document.getElementById('exampleFormControlTextarea1');\r\n    text.select();\r\n    document.getSelection().removeAllRanges();\r\n    navigator.clipboard.writeText(text.value);\r\n    prop.showAlert(\"Success\", \"Copy to Clipboard\")\r\n  };\r\n  const handExtraSpace = () => {\r\n    let newText= text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    prop.showAlert(\"Success\", \"Romoved exter space\")\r\n  };\r\n  \r\n  const handOneChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  \r\n  \r\n  const clearText = (event) => {\r\n    setText(\"\");\r\n    prop.showAlert(\"Success\", \"Clear all text\")\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={`my-2 text-${prop.mode=== \"light\" ? \"dark\" : \"light\"}`}>\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n          <h2>Enter Your text to update</h2>\r\n        </label>\r\n        <textarea\r\n          onChange={handOneChange}\r\n          value={text}\r\n          className={`form-control bg-${prop.mode} `}\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n        <button disabled= {text.length===0}\r\n          className=\"btn btn-primary m-2\"\r\n          onClick={updateUppercase}\r\n          onChange={handOneChange}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button disabled= {text.length===0}\r\n          className=\"btn btn-primary m-2\"\r\n          onClick={updateLowercase}\r\n          onChange={handOneChange}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button disabled= {text.length===0}\r\n          className=\"btn btn-primary m-2\"\r\n          onClick={handCopyText}\r\n          onChange={handOneChange}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button disabled= {text.length===0}\r\n          className=\"btn btn-primary m-2\"\r\n          onClick={handExtraSpace}\r\n          onChange={handOneChange}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n       \r\n        <button disabled= {text.length===0}\r\n          className=\"btn btn-danger m-2\"\r\n          onClick={clearText}\r\n          onChange={handOneChange}\r\n        >\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div className={`container text-${prop.mode=== \"light\" ? \"dark\" : \"light\"}`}>\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length - 1}words and {text.length}characters\r\n        </p>\r\n        <p>{0.008 * (text.split(\" \").length-1)} minutes to read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Type somthing above to preview \"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(prop) {\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n{prop.alert && <div className=\"alert alert-success\" role=\"alert\">\r\n      <strong>{prop.alert.type}</strong>: {prop.alert.msg} \r\n    </div>} \r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Navbar from './components/Navbar'\r\nimport TextFrom from './components/TextFrom'\r\nimport React, { useState } from 'react'\r\nimport Alert from \"./components/Alert\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [mode, setmode]= useState('light');\r\n  const toggleDarkMode=()=>{\r\n    setmode('dark')\r\n    document.body.style.backgroundColor='black';\r\n    showAlert('Success', 'Dark mode enable')\r\n  }\r\n  \r\n  const toggleLightMode=()=>{\r\n    setmode('light')\r\n    document.body.style.backgroundColor='white';\r\n    showAlert('Success', 'Light mode enable')\r\n  }\r\n  \r\n  const toggleGreenMode=()=>{\r\n    setmode('success')\r\n    document.body.style.backgroundColor='#00631b';\r\n    showAlert('Success', 'Green mode enable')\r\n  }\r\n  \r\n  const toggleBlueMode=()=>{\r\n    setmode('primary')\r\n    document.body.style.backgroundColor='#000a69';\r\n    showAlert('Success', 'Blue mode enable')\r\n  }\r\n  \r\n\r\n  const [alert, setAlert] = useState(null);\r\n \r\n  const showAlert =(type, msg)=>{\r\n    setAlert({type: type,\r\n    msg: msg})\r\n\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 1500);\r\n    \r\n  }\r\n  return (\r\n    <>\r\n      \r\n      <Navbar tittle='TextUtil' mode={mode} toggleDarkMode={toggleDarkMode} toggleGreenMode={toggleGreenMode} toggleLightMode={toggleLightMode} toggleBlueMode={toggleBlueMode}/>\r\n      <Alert alert={alert}/>\r\n      <div className=\"container my-3\">\r\n        <TextFrom mode={mode} showAlert={showAlert}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}